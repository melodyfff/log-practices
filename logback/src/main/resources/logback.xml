<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <property name="AppName" value="logback"/>
    <property name="FILE_PATH" value="/opt/applog/logback"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS}|-%-5level| %thread| %logger{36} - %msg%n"/>
    <property name="CONSOLE_LOG_PATTERN"
              value="%highlight(%d{yyyy-MM-dd HH:mm:ss.SSS})|-%highlight(%-5level)| %boldYellow(%thread)| %green(%logger{36}) - %cyan(%msg%n)"/>

    <!-- 每分钟触发一次 -->
    <timestamp key="byMinute" datePattern="yyyyMMdd'T'HHmm"/>

    <contextName>${AppName}</contextName>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
        </encoder>
    </appender>

    <!-- 保存日志到本地 -->
    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>${FILE_PATH}/file.log</file>
        <!-- set immediateFlush to false for much higher logging throughput -->
        <immediateFlush>true</immediateFlush>
        <!-- 如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。-->
        <append>true</append>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 根据时间生成文件 -->
    <appender name="TIME" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${FILE_PATH}/time.${byMinute}.log</file>
        <!-- set immediateFlush to false for much higher logging throughput -->
        <immediateFlush>true</immediateFlush>
        <!-- 如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。-->
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${FILE_PATH}/time.%d{yyyy-MM-dd_HH-mm}.log</fileNamePattern>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 每天生成日志 包含全级别 并按照size切分 -->
    <appender name="FILE_DAY" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${FILE_PATH}/server.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 必须 翻转期是从fileNamePattern的值推断出来的 -->
            <fileNamePattern>${FILE_PATH}/server.%d{yyyy-MM-dd_HH-mm}.%i.log</fileNamePattern>
            <maxFileSize>10kb</maxFileSize>
            <!-- keep 30 days' worth of history capped at 3GB total size -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 只输出INFO级别日志 -->
    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${FILE_PATH}/info.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 必须 翻转期是从fileNamePattern的值推断出来的 -->
            <fileNamePattern>${FILE_PATH}/info.%d{yyyy-MM-dd_HH-mm}.log</fileNamePattern>
            <!-- keep 30 days' worth of history capped at 3GB total size -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 只输出DEBUG级别日志 -->
    <appender name="FILE_DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${FILE_PATH}/debug.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 必须 翻转期是从fileNamePattern的值推断出来的 -->
            <fileNamePattern>${FILE_PATH}/debug.%d{yyyy-MM-dd_HH-mm}.log</fileNamePattern>
            <!-- keep 30 days' worth of history capped at 3GB total size -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>


    <!-- 只输出ERROR级别日志 -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${FILE_PATH}/error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 必须 翻转期是从fileNamePattern的值推断出来的 -->
            <fileNamePattern>${FILE_PATH}/error.%d{yyyy-MM-dd_HH-mm}.log</fileNamePattern>
            <!-- keep 30 days' worth of history capped at 3GB total size -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <logger name="com.xinchen.log" level="ALL">
        <appender-ref ref="FILE" />
        <appender-ref ref="TIME" />
        <appender-ref ref="FILE_DAY"/>
        <appender-ref ref="FILE_ERROR"/>
        <appender-ref ref="FILE_INFO"/>
        <appender-ref ref="FILE_DEBUG"/>
    </logger>


    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>